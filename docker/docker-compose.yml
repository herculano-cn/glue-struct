services:
  # AWS Glue Local
  glue-local:
    build:
      context: ..
      dockerfile: docker/Dockerfile.glue
    container_name: glue-local
    volumes:
      - ../jobs:/home/glue_user/workspace/jobs
      - ../shared:/home/glue_user/workspace/shared
      - ~/.aws:/home/glue_user/.aws:ro
    ports:
      - "8888:8888"  # Jupyter Notebook
      - "4040:4040"  # Spark UI
    environment:
      - DISABLE_SSL=true
      - AWS_PROFILE=default
      - PYTHONPATH=/home/glue_user/workspace
      # Database connection configurations
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - glue-network
    depends_on:
      - mysql
      - postgres
    # Command to start Jupyter Notebook
    command: >
      bash -c "/home/glue_user/jupyter/jupyter notebook
      --ip=0.0.0.0
      --port=8888
      --no-browser
      --allow-root
      --NotebookApp.token=''
      --NotebookApp.password=''
      --notebook-dir=/home/glue_user/workspace"

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=ai_cockpit
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../scripts/init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql
    networks:
      - glue-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=langfuse
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    networks:
      - glue-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  glue-network:
    driver: bridge

volumes:
  mysql_data:
  postgres_data: